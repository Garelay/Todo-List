{"version":3,"sources":["components/Form.jsx","components/UpdateForm.jsx","components/Todo.jsx","components/Todolist.jsx","App.js","index.js"],"names":["Form","todos","setTodos","setFilterStatus","filteredTodos","useState","input","setInput","handleSubmit","e","a","preventDefault","newTodos","id","uuidv4","task","copleted","edit","className","onSubmit","type","placeholder","value","onChange","target","UpdateForm","todo","map","item","Todo","completed","onClick","title","filter","Todolist","App","setFilteredTodos","filterStatus","useEffect","localStorage","getItem","setItem","JSON","stringify","parse","handleFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3880a3f9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {GoDiffAdded} from 'react-icons/go';\r\n\r\nfunction Form({todos,setTodos,setFilterStatus,filteredTodos}) {\r\n    const [input, setInput] = useState(\"\")\r\n    \r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        if (input === \"\"){\r\n            return\r\n        }\r\n        const newTodos = [...todos, {id: uuidv4(), task: input, copleted:false, edit:false}]\r\n        await setTodos(newTodos);\r\n        setInput(\"\")        \r\n      }\r\n    const handleFilterStatusChange = (e) =>{\r\n        setFilterStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\"> \r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" className=\"input\" placeholder=\"Add a task\" value={input} onChange={handleChange}/>\r\n                <button className=\"add\">\r\n                    <GoDiffAdded/>\r\n                </button>\r\n                \r\n            </form>\r\n            <select className = \"filter-select\" onChange={handleFilterStatusChange}>\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n        </div>\r\n \r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, {useState} from 'react';\r\nimport {IoCheckmarkDoneOutline} from 'react-icons/io5';\r\n\r\nfunction UpdateForm({todo, todos, setTodos}) {\r\n        const [input, setInput] = useState(todo.task)    \r\n        const handleChange = e => {\r\n            setInput(e.target.value)            \r\n        }\r\n        const handleUpdate = (e) =>{\r\n            e.preventDefault();\r\n            setTodos(todos.map((item)=>{\r\n                if (item.id===todo.id){\r\n                    return {\r\n                        ...item, task:input, edit: !item.edit\r\n                    }\r\n                }\r\n                return item\r\n            }))\r\n            setInput(\"\");\r\n        }\r\n\r\n    return (\r\n        <form className= \"update-form\" onSubmit={handleUpdate}> \r\n            <input type=\"text\" className=\"update-input\" value={input} onChange={handleChange}/>\r\n            <button className=\"update-btn\">\r\n                <IoCheckmarkDoneOutline/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateForm\r\n","import React from 'react'\r\nimport UpdateForm from './UpdateForm'\r\nimport {TiInputCheckedOutline, TiEdit, TiDeleteOutline} from 'react-icons/ti'\r\n\r\n\r\nfunction Todo({todo, todos, setTodos}) {\r\n    const handleComplete = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if (item.id===todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n    const handleDelete = () =>{\r\n        setTodos(todos.filter((item)=>item.id !== todo.id))\r\n    }\r\n    const handleEdit = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if (item.id===todo.id){\r\n                return {\r\n                    ...item, edit: !item.edit\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    if (todo.edit) {\r\n        return (\r\n        <UpdateForm todo={todo} todos={todos} setTodos={setTodos} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n            <span className=\"todo-item-text\">\r\n                {todo.task}\r\n            </span>\r\n            <button className=\"complete-btn\" onClick={handleComplete} title=\"Mark as completed\">\r\n                <TiInputCheckedOutline/>\r\n            </button>\r\n            <button className=\"edit-btn\" onClick={handleEdit} title=\"Edit the task\">\r\n                <TiEdit/>\r\n            </button>\r\n            <button className=\"delete-btn\" onClick={handleDelete} title=\"Delete the task\">\r\n                <TiDeleteOutline/>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\n\r\nconst Todolist = ({ todos , setTodos, filteredTodos}) => {\r\n\r\n    return (\r\n          <ul>\r\n         {filteredTodos.map(todo=> <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos}/>) }         \r\n          </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default Todolist\r\n","import React, {useState, useEffect} from \"react\";\nimport Form from \"./components/Form\";\nimport Todolist from \"./components/Todolist\";\nimport './App.css'\nfunction App() {\n\n  const [todos, setTodos] = useState([{id:1, task: \"Test this app\", completed:false,edit:false}])\n  const [filteredTodos, setFilteredTodos] = useState(todos)\n  const [filterStatus, setFilterStatus] = useState(\"all\")\n\n  //onMount getting todos from local storage\n  useEffect(()=>{\n    if (localStorage.getItem(\"todos\")===null){\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\n    }\n    else {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")))\n    }\n  },[])\n  //on change of todos change local storage\n  useEffect(()=>{\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  },[todos])\n\n\n  useEffect(()=>{\n    const handleFilter = () =>{\n      switch (filterStatus) {\n        case \"completed\":{\n          setFilteredTodos(todos.filter((todo=>todo.completed)))\n          break\n        }\n        case \"uncompleted\":{\n          setFilteredTodos(todos.filter((todo=>!todo.completed)))\n          break\n        }\n        default:{\n          setFilteredTodos(todos)\n          break\n        }\n      }\n    }\n    handleFilter()\n  }, [todos, filterStatus]);\n  \n  return (\n    <div className=\"App\">\n     <header>My todo list</header>\n     <Form \n      todos={todos}\n      setTodos={setTodos}\n      filteredTodos={filteredTodos}\n      setFilterStatus={setFilterStatus}/>\n     <Todolist todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}