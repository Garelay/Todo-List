{"version":3,"sources":["components/Form.jsx","components/UpdateForm.jsx","components/Todo.jsx","components/Todolist.jsx","App.js","index.js"],"names":["Form","todos","setTodos","setFilterStatus","filteredTodos","useState","input","setInput","focusRef","useRef","useEffect","handleClick","handleSubmit","e","a","preventDefault","test","newTodos","id","uuidv4","task","copleted","edit","current","focus","className","onSubmit","type","placeholder","value","onChange","target","ref","onClick","UpdateForm","todo","map","item","Todo","completed","title","filter","Todolist","App","setFilteredTodos","filterStatus","localStorage","getItem","setItem","JSON","stringify","parse","handleFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55f21bd8.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {GoDiffAdded} from 'react-icons/go';\r\n// import { useEffect } from 'react/cjs/react.development';\r\n\r\nfunction Form({todos,setTodos,setFilterStatus,filteredTodos}) {\r\n    const [input, setInput] = useState(\"\")\r\n    const focusRef = useRef(null)\r\n    useEffect(()=>{\r\n        handleClick()\r\n    },[])\r\n    \r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        if (/^\\s*$/.test(input)){\r\n            return\r\n        }\r\n        const newTodos = [...todos, {id: uuidv4(), task: input, copleted:false, edit:false}]\r\n        await setTodos(newTodos)\r\n        setInput(\"\")      \r\n      }\r\n    const handleClick = () =>{\r\n        focusRef.current.focus()\r\n    }\r\n    const handleFilterStatusChange = (e) =>{\r\n        setFilterStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\"> \r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" className=\"input\" placeholder=\"Add a task\" value={input} onChange={handleChange} ref={focusRef}/>\r\n                <button className=\"add\" onClick={handleClick}>\r\n                    <GoDiffAdded/>\r\n                </button>                \r\n            </form>\r\n            <select className = \"filter-select\" onChange={handleFilterStatusChange}>\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"uncompleted\">Uncompleted</option>\r\n            </select>\r\n        </div>\r\n \r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React, {useState} from 'react';\r\nimport {IoCheckmarkDoneOutline} from 'react-icons/io5';\r\n\r\nfunction UpdateForm({todo, todos, setTodos}) {\r\n        const [input, setInput] = useState(todo.task)    \r\n        const handleChange = e => {\r\n            setInput(e.target.value)            \r\n        }\r\n        const handleUpdate = (e) =>{\r\n            e.preventDefault();\r\n            setTodos(todos.map((item)=>{\r\n                if (item.id===todo.id){\r\n                    return {\r\n                        ...item, task:input, edit: !item.edit\r\n                    }\r\n                }\r\n                return item\r\n            }))\r\n            setInput(\"\");\r\n        }\r\n\r\n    return (\r\n        <form className= \"update-form\" onSubmit={handleUpdate}> \r\n            <input type=\"text\" className=\"update-input\" value={input} onChange={handleChange}/>\r\n            <button className=\"update-btn\">\r\n                <IoCheckmarkDoneOutline/>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UpdateForm\r\n","import React from 'react'\r\nimport UpdateForm from './UpdateForm'\r\nimport {TiInputCheckedOutline, TiEdit, TiDeleteOutline} from 'react-icons/ti'\r\n\r\n\r\nfunction Todo({todo, todos, setTodos}) {\r\n    const handleComplete = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if (item.id===todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n    const handleDelete = () =>{\r\n        setTodos(todos.filter((item)=>item.id !== todo.id))\r\n    }\r\n    const handleEdit = () =>{\r\n        setTodos(todos.map((item)=>{\r\n            if (item.id===todo.id){\r\n                return {\r\n                    ...item, edit: !item.edit\r\n                }\r\n            }\r\n            return item\r\n        }))\r\n    }\r\n\r\n    if (todo.edit) {\r\n        return (\r\n        <UpdateForm todo={todo} todos={todos} setTodos={setTodos} />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n            <span className=\"todo-item-text\">\r\n                {todo.task}\r\n            </span>\r\n            <button className=\"complete-btn\" onClick={handleComplete} title=\"Mark as completed\">\r\n                <TiInputCheckedOutline/>\r\n            </button>\r\n            <button className=\"edit-btn\" onClick={handleEdit} title=\"Edit the task\">\r\n                <TiEdit/>\r\n            </button>\r\n            <button className=\"delete-btn\" onClick={handleDelete} title=\"Delete the task\">\r\n                <TiDeleteOutline/>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\n\r\n\r\nconst Todolist = ({ todos , setTodos, filteredTodos}) => {\r\n\r\n    return (\r\n          <ul>\r\n         {filteredTodos.map(todo=> <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos}/>) }         \r\n          </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default Todolist\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Form from \"./components/Form\";\r\nimport Todolist from \"./components/Todolist\";\r\nimport './App.css'\r\nfunction App() {\r\n\r\n  const [todos, setTodos] = useState([{id:1, task: \"Test this app\", completed:false,edit:false}])\r\n  const [filteredTodos, setFilteredTodos] = useState(todos)\r\n  const [filterStatus, setFilterStatus] = useState(\"all\")\r\n\r\n  //onMount getting todos from local storage\r\n  useEffect(()=>{\r\n    if (localStorage.getItem(\"todos\")===null){\r\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }\r\n    else {\r\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")))\r\n    }\r\n    // eslint-disable-next-line\r\n  },[])\r\n  //on change of todos change local storage\r\n  useEffect(()=>{\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n  },[todos])\r\n\r\n\r\n  useEffect(()=>{\r\n    const handleFilter = () =>{\r\n      switch (filterStatus) {\r\n        case \"completed\":{\r\n          setFilteredTodos(todos.filter((todo=>todo.completed)))\r\n          break\r\n        }\r\n        case \"uncompleted\":{\r\n          setFilteredTodos(todos.filter((todo=>!todo.completed)))\r\n          break\r\n        }\r\n        default:{\r\n          setFilteredTodos(todos)\r\n          break\r\n        }\r\n      }\r\n    }\r\n    handleFilter()\r\n  }, [todos, filterStatus]);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n     <header>My todo list</header>\r\n     <Form \r\n      todos={todos}\r\n      setTodos={setTodos}\r\n      filteredTodos={filteredTodos}\r\n      setFilterStatus={setFilterStatus}/>\r\n     <Todolist todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}